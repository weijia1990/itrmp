<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.requirementchildpro.dao.RequirementproChildDao">
    
	<sql id="requirementproChildColumns">
		a.id AS "id",
		a.requirement_child_id AS "requirementChild.id",
		a.requirementpro_child_title AS "requirementproChildTitle",
		a.requirementp_file AS "requirementpFile",
		a.requirementpro_child_track AS "requirementproChildTrack",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="requirementproChildJoins">
		LEFT JOIN requirement_child b ON b.id = a.requirement_child_id
	</sql>
    
	<select id="get" resultType="RequirementproChild">
		SELECT 
			<include refid="requirementproChildColumns"/>
		FROM requirementpro_child a
		<include refid="requirementproChildJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="RequirementproChild">
		SELECT 
			<include refid="requirementproChildColumns"/>
		FROM requirementpro_child a
		<include refid="requirementproChildJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="requirementChild != null and requirementChild.id != null and requirementChild.id != ''">
				AND a.requirement_child_id = #{requirementChild.id}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date ASC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="RequirementproChild">
		SELECT 
			<include refid="requirementproChildColumns"/>
		FROM requirementpro_child a
		<include refid="requirementproChildJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date ASC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO requirementpro_child(
			id,
			requirement_child_id,
			requirementpro_child_title,
			requirementp_file,
			requirementpro_child_track,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{requirementChild.id},
			#{requirementproChildTitle},
			#{requirementpFile},
			#{requirementproChildTrack},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE requirementpro_child SET 	
			requirement_child_id = #{requirementChild.id},
			requirementpro_child_title = #{requirementproChildTitle},
			requirementp_file = #{requirementpFile},
			requirementpro_child_track = #{requirementproChildTrack},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE requirementpro_child SET 
			del_flag = #{DEL_FLAG_DELETE}
		<choose>
			<when test="id !=null and id != ''">
				WHERE id = #{id}
			</when>
			<otherwise>
				WHERE requirement_child_id = #{requirementChild.id}
			</otherwise>
		</choose>
	</update>
	
</mapper>